# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddressDTO {
  addressLineOne: String!
  city: String!
  country: String!
  description: String!
  home: String!
  postal_code: String!
  region: String!
  street: String!
}

type AddressModel {
  addressLineOne: String
  city: String
  country: String
  description: String!
  home: String
  postal_code: String
  region: String
  street: String
}

type AddressSegmentsModel {
  city: String!
  country: String!
  home: String!
  postal_code: String!
  region: String!
  street: String!
}

type AddressesModel {
  description: String!
  place_id: ID!
}

type AdminModel {
  _id: ID!
  email: String!
  firstName: String
  lastName: String
  roles: [String!]!
  status: String
}

type AggregatedPropertyModel {
  _id: ID!
  address: AddressModel!
  images: [PropertyPhoto!]
  managerIds: [ID!]!
  managers: [UserModel!]!
  portfolio: PropertyPortfolioModel!
  portfolioId: ID!
  type: PropertyTypesModel!
  typeId: ID!
  unitDetails: PropertyUnitDetails
  units: Float!
}

input CreatePropertyDTO {
  address: AddressDTO!
  managerIds: [ID!]!
  portfolio: String!
  type: String!
  units: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeletePhotosDTO {
  photoIds: [String!]!
  propertyId: ID!
}

input ICreateAdminDTO {
  email: String!
  firstName: String!
  lastName: String!
  roles: [String!]!
  temporaryPassword: String!
}

input IEditAdminDTO {
  _id: ID!
  email: String!
  firstName: String!
  lastName: String!
  password: String
  roles: [String!]!
  status: String!
}

input ILoginAdminDTO {
  email: String!
  pass: String!
  remember: Boolean = false
}

input ILoginClientDTO {
  email: String!
  pass: String!
}

type LoginAdminModel {
  _id: ID!
  email: String!
  firstName: String
  lastName: String
  roles: [String!]!
  status: String
}

type Mutation {
  addPropertyPhotos(files: [Upload!], propertyId: String!): Boolean!
  createAdmin(file: Upload, input: ICreateAdminDTO!): Boolean
  createNewTenantRequest(input: NewTenantRequestFormDTO!): Boolean!
  createProperty(files: [Upload!], input: CreatePropertyDTO!): Boolean!
  deletePropertyPhotos(input: DeletePhotosDTO!): Boolean!
  editAdmin(input: IEditAdminDTO!): Boolean!
  loginAdmin(input: ILoginAdminDTO!): LoginAdminModel!
  loginClient(input: ILoginClientDTO!): Boolean!
  updateTenantRequest(input: UpdateTenantRequestDTO!): Boolean!
  updateUnit(input: UpdateUnitDTO!): Boolean!
}

input NewTenantRequestFormDTO {
  additionalInfo: String = ""
  address: String!
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
  propertyAddress: String!
  propertyId: ID!
  requiredBy: String!
}

type PropertyGroupedByStateModel {
  _id: ID!
  cities: [String!]!
  images: [PropertyPhoto!]!
  propertyIds: [ID!]!
}

type PropertyModel {
  _id: ID!
  address: AddressModel!
  managerIds: [ID!]!
  portfolioId: ID!
  typeId: ID!
  units: Float!
}

type PropertyPhoto {
  _id: ID!
  bucket: String!
  eTag: String!
  key: String!
  propertyId: ID!
  url: String!
}

type PropertyPortfolioModel {
  _id: ID!
  name: String!
}

type PropertyTypesModel {
  _id: ID!
  name: String!
}

type PropertyUnitBathroomDetails {
  max: Float
  min: Float
}

type PropertyUnitBedroomDetails {
  max: Float
  min: Float
}

type PropertyUnitDetails {
  available: Float
  bathrooms: PropertyUnitBathroomDetails
  bedrooms: PropertyUnitBedroomDetails
}

type PropertyUnitModel {
  _id: ID!
  bathrooms: Float
  bedrooms: Float
  propertyId: ID!
  status: String!
  unitNumber: Float!
}

type Query {
  getAddressGeocode(query: String!): AddressSegmentsModel
  getAddresses(query: String!): [AddressesModel!]!
  getAdmins: [AdminModel!]!
  getAggregatedProperties: [AggregatedPropertyModel!]!
  getAggregatedPropertiesByQuery(query: String!): [AggregatedPropertyModel!]!
  getAggregatedPropertyById(id: String!): AggregatedPropertyModel!
  getManagers: [AdminModel!]!
  getProperties: [PropertyModel!]!
  getPropertiesByQuery(query: String!): [PropertyModel!]!
  getPropertiesGroupedByState: [PropertyGroupedByStateModel!]!
  getPropertyPortfolios(query: String): [PropertyPortfolioModel!]!
  getPropertyTypes(query: String): [PropertyTypesModel!]!
  getRentalRequests: [RentalRequestModel!]!
  getRoot: String!
  getUnits(propertyId: String!): [PropertyUnitModel!]!
}

type RentalRequestModel {
  _id: ID!
  additionalInfo: String
  address: AddressModel!
  createdAt: DateTime!
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
  property: PropertyModel!
  propertyId: ID!
  requiredBy: DateTime!
  status: String
}

input UpdateTenantRequestDTO {
  _id: ID!
  status: String!
}

input UpdateUnitDTO {
  bathrooms: Float = null
  bedrooms: Float = null
  propertyId: ID!
  status: String!
  unitNumber: Float!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserModel {
  _id: ID!
  email: String!
  firstName: String
  lastName: String
  roles: [String!]!
  status: String
}
